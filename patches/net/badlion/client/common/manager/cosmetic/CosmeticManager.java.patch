--- a/net/badlion/client/common/manager/cosmetic/CosmeticManager.java
+++ b/net/badlion/client/common/manager/cosmetic/CosmeticManager.java
@@ -168,54 +168,25 @@
    }
 
    public void method_2828() {
-      InputStream var1 = this.getClass().getClassLoader().getResourceAsStream("blc/cosmetics/cosmetics.json");
-
-      try {
-         BufferedReader var2 = new BufferedReader(new InputStreamReader(var1));
-         Throwable var3 = null;
-
-         try {
-            Map var4 = ((class_920)BadlionClient.UGLY_GSON.fromJson(var2, class_920.class)).method_2712();
-            Iterator var5 = var4.entrySet().iterator();
-
-            while(var5.hasNext()) {
-               Entry var6 = (Entry)var5.next();
-               Iterator var7 = ((List)var6.getValue()).iterator();
-
-               while(var7.hasNext()) {
-                  class_918 var8 = (class_918)var7.next();
-                  var8.method_2693((class_910)var6.getKey());
-                  this.field_1770.put(new class_958(var8.method_2696(), var8.method_2695()), var8);
+      InputStream inputStream2 = this.getClass().getClassLoader().getResourceAsStream("blc/cosmetics/cosmetics.json");
+      try (BufferedReader json = new BufferedReader(new InputStreamReader(inputStream2))) {
+         for (final Map.Entry<class_910, List<class_918>> entry : BadlionClient.UGLY_GSON.fromJson(json, class_920.class).method_2712().entrySet()) {
+            for (final class_918 class_918 : entry.getValue()) {
+               class_918.method_2693(entry.getKey());
+               this.field_1770.put(new class_958(class_918.method_2696(), class_918.method_2695()), class_918);
                }
             }
-
             LogManager.getLogger().info("Loaded Cosmetics JSON!");
-         } catch (Throwable var18) {
-            var3 = var18;
-            throw var18;
-         } finally {
-            if (var2 != null) {
-               if (var3 != null) {
-                  try {
-                     var2.close();
-                  } catch (Throwable var17) {
-                     var3.addSuppressed(var17);
                   }
-               } else {
-                  var2.close();
+      catch (FileNotFoundException ex) {
+         LogManager.getLogger().info("ERROR: Unable to load cosmetics json file! " + ex.getMessage());
                }
+      catch (IOException ex2) {
+         LogManager.getLogger().info("ERROR: Unable to load cosmetics json file! " + ex2.getMessage());
+         LogManager.getLogger().catching((Throwable)ex2);
             }
-
          }
-      } catch (FileNotFoundException var20) {
-         LogManager.getLogger().info("ERROR: Unable to load cosmetics json file! " + var20.getMessage());
-      } catch (IOException var21) {
-         LogManager.getLogger().info("ERROR: Unable to load cosmetics json file! " + var21.getMessage());
-         LogManager.getLogger().catching(var21);
-      }
 
-   }
-
    public void method_2846(boolean var1) {
       this.method_2847(var1, (class_2103)null);
    }
@@ -311,8 +282,8 @@
    public void method_2837(final Cosmetic var1) {
       if (!this.runningCosmeticEdit) {
          this.runningCosmeticEdit = true;
-         final Integer var2 = null;
-         final class_910 var3 = null;
+         Integer var2 = null;
+         class_910 var3 = null;
          Iterator var4 = this.cosmeticResponse.getCosmetics().iterator();
 
          while(var4.hasNext()) {
@@ -323,6 +294,8 @@
             }
          }
 
+         Integer finalVar = var2;
+         class_910 finalVar1 = var3;
          this.threadPool.submit(new Runnable() {
             public void run() {
                try {
@@ -343,8 +316,8 @@
                   } else {
                      LogManager.getLogger().debug("Disable Not Success: " + var2x.method_3081());
                      BadlionClient.getBadlion().getWrapper().getActiveModProfile().addNotification(new class_700(3000L, "Cosmetics", class_699.WARNING, "Please wait a bit before doing this again!", true));
-                     if (var2 != null) {
-                        LogManager.getLogger().debug("Enabling last cosmetic " + var2);
+                     if (finalVar != null) {
+                        LogManager.getLogger().debug("Enabling last cosmetic " + finalVar);
                         var3x = CosmeticManager.this.cosmeticResponse.getCosmetics().iterator();
 
                         label102:
@@ -355,7 +328,7 @@
                               }
 
                               var4 = (Cosmetic)var3x.next();
-                              if (var4.method_2806() == var2 && var4.method_2807().equals(var3)) {
+                              if (var4.method_2806() == finalVar && var4.method_2807().equals(finalVar1)) {
                                  var4.method_2800(true);
                               } else if (var4.method_2807().equals(var1.method_2807())) {
                                  var4.method_2800(false);
@@ -382,8 +355,8 @@
    public void method_2850(final Cosmetic var1) {
       if (!this.runningCosmeticEdit && this.cosmeticResponse != null) {
          this.runningCosmeticEdit = true;
-         final Integer var2 = null;
-         final class_910 var3 = null;
+         Integer var2 = null;
+         class_910 var3 = null;
          Iterator var4 = this.cosmeticResponse.getCosmetics().iterator();
 
          while(var4.hasNext()) {
@@ -394,6 +367,8 @@
             }
          }
 
+         Integer finalVar = var2;
+         class_910 finalVar1 = var3;
          this.threadPool.submit(new Runnable() {
             public void run() {
                try {
@@ -421,8 +396,8 @@
                   } else {
                      LogManager.getLogger().debug("Enable Not Success: " + var2x.method_3081());
                      BadlionClient.getBadlion().getWrapper().getActiveModProfile().addNotification(new class_700(3000L, "Cosmetics", class_699.WARNING, "Please wait a bit before doing this again!", true));
-                     if (var2 != null) {
-                        LogManager.getLogger().debug("Enabling last cosmetic " + var2);
+                     if (finalVar != null) {
+                        LogManager.getLogger().debug("Enabling last cosmetic " + finalVar);
                         var3x = CosmeticManager.this.method_2862().getCosmetics().iterator();
 
                         label111:
@@ -433,7 +408,7 @@
                               }
 
                               var4 = (Cosmetic)var3x.next();
-                              if (var4.method_2806() == var2 && var4.method_2807().equals(var3)) {
+                              if (var4.method_2806() == finalVar && var4.method_2807().equals(finalVar1)) {
                                  var4.method_2800(true);
                               } else if (var4.method_2807().equals(var1.method_2807())) {
                                  var4.method_2800(false);
